
<!DOCTYPE html>
<html lang="en" >

<head>
  <meta charset="UTF-8">
  

    <link rel="apple-touch-icon" type="image/png" href="https://cpwebassets.codepen.io/assets/favicon/apple-touch-icon-5ae1a0698dcc2402e9712f7d01ed509a57814f994c660df9f7a952f3060705ee.png" />

    <meta name="apple-mobile-web-app-title" content="CodePen">

    <link rel="shortcut icon" type="image/x-icon" href="https://cpwebassets.codepen.io/assets/favicon/favicon-aec34940fbc1a6e787974dcd360f2c6b63348d4b1f4e06c77743096d55480f33.ico" />

    <link rel="mask-icon" type="image/x-icon" href="https://cpwebassets.codepen.io/assets/favicon/logo-pin-b4b4269c16397ad2f0f7a01bcdf513a1994f4c94b8af2f191c09eb0d601762b1.svg" color="#111" />

   
  
  <title>CodePen - admin-dashboard-alt</title>
    <link rel="canonical" href="https://codepen.io/dpnilsen/pen/XWqGwOO" />
  
  
  
  
<style>
/* || VARIABLES */
:root {
  --window-width: 100vw;
  --body-background-color: #eceaea;
  --main-font-size: 14pt;

  --default-border-radius: 0.4rem;

  --header-bg-color: rgb(255, 255, 255);
  --header-color: rgb(0, 0, 0);

  --page-footer-bg-color: rgb(235, 6, 6);
  --page-footer-text-color: #fff;

  --page-left-sidebar-bg-color: rgb(0, 0, 0);
  --page-left-sidebar-text-color: #fff;

  --main-header-box-bg-color: rgb(235, 6, 6);
  --main-header-box-border: thin solid #00bfff;
  --main-header-box-text-color: #fff;
  
  --card-bg-color: smokewhite;
  --card-border: thin solid #d12b2b;
  --card-radius: var(--default-border-radius);
  --card-shadow: -1px 7px 5px 0px rgba(204,192,192,0.64);
  --card-padding: 1rem;
  --card-header-text-color: #000;
  --card-header-bg-color: #efefef;
  --card-header-font-size: 110%;
  --card-section-title-bg-color:#efefef;
  --card-section-title-padding: 1rem;

  --button-color: blue;
  --button-text-color: #fff;
  --input-border: thin solid #ddee;
}
/* || RESETS */
html,
body,
div,
p,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
dl,
dt,
dd,
form,
fieldset,
caption,
legend,
table,
tr,
td,
th,
address,
blockquote,
img {
  margin: 0;
  padding: 0;
}

img,
fieldset {
  border: none;
}

blockquote,
q {
  quotes: none;
}

body *,
*:after,
*:before {
  box-sizing: border-box;
}

button,
summary {
  cursor: pointer;
}
/* || GENERAL STYLES */
html,
body {
  height: 100%;
  width: 100%;
  overflow: hidden;
}


.main-page {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "page-header page-header page-header page-header"
    "main-content main-content main-content main-content"
    "page-footer page-footer page-footer page-footer";

  width: 100%;

  height: 100%;
}

.page-header {
  grid-area: page-header;
  color: var(--header-color);
  background-color: rgb(242 242 242);
  padding: 1rem;
  max-height: 4rem;
  
  display:flex;
  align-items: center;
  
  position:fixed;
  width:100%;
}

.page-header nav {
  display: flex;
}
.page-header > span {
  padding: 0 .5rem;
  text-transform: uppercase
}
.page-header img {
  width: 2rem;
  border-radius: .5rem;
}
.page-header > input {
   border-radius: var(--default-border-radius);
  padding: .5rem;
  padding-left: 2rem;
  margin-left: 4rem;
  min-width: 50%;

}
/* .input__search { 
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18 22a6 6 0 1 0 0-12 6 6 0 0 0 0 12zm6.321-1.096l5.386 5.39a1 1 0 1 1-1.414 1.413l-5.386-5.388a8 8 0 1 1 1.414-1.415z' fill='black' fill-rule='nonzero'/%3E%3C/svg%3E");

  background-repeat: no-repeat;
  padding: 10px 40px;
} */
.main-content {
  grid-area: main-content;
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr 1fr auto;
  grid-template-areas:
    "left-sidebar content-header"
    "left-sidebar content-1"
    "left-sidebar content-2"
    "left-sidebar content-3"
    "content-footer content-footer";

  height: 100%;
  width:100%;
  margin-top:4rem;
}


aside.left-sidebar {
  grid-area: left-sidebar;
  background-color: var(--page-left-sidebar-bg-color);
  color: var(--page-left-sidebar-text-color);

  padding: 1rem;
  height: 100%;
  
  transition: width .10s ease-in-out;
  
  
}
aside.left-sidebar{
  position:fixed;
  
}
.left-sidebar nav
{
  display: flex;
  overflow-y: auto;
  
}
.left-sidebar nav ul {
  list-style: none;
}

.left-sidebar nav ul li {
  padding: 1rem 0.9rem;
  padding-left: 0;
}

.left-sidebar ul label {
  text-transform: uppercase;
  font-weight: 100;
}
.left-sidebar nav ul li span {
  display:inline-flex;
  align-items: center;
}

  main.main-content {
overflow: auto;
  }

.main-content header {
  grid-area: content-header;

  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
}

.main-content header div.card {
  display: flex;
  padding: 0.5rem;
  margin: 1rem 0;
  min-width: 11rem;
}
.main-content header div {
  display: flex;
  color: var(--main-header-box-text-color);
  background-color: var(--main-header-box-bg-color);

  padding: 1rem;
  align-items: center;

  border-radius: var(--default-border-radius);
  box-shadow: 0 0 10px gray;
}

/* image */
.main-content header div div:nth-child(1) {
  display: flex;
  justify-content: center;

  background-color: #fff;

  border-radius: 50%;
  border: none;
  box-shadow: none;

  color: #02020a;
}
/* numbers and text */
.main-content header div div:nth-child(2) {
  display: flex;
  flex-direction: column;

  align-items: flex-end;
  flex: 1;

  box-shadow: none;
}
/* numbers */
.main-content header div div:nth-child(2) span:nth-child(1) {
  font-size: 120%;
  font-weight: 700;
}

.page-footer {
  grid-area: page-footer;

  display: flex;
  justify-content: center;
  align-items: center;

  color: var(--page-footer-text-color);
  background-color: var(--page-footer-bg-color);
  
  position: fixed;
  bottom:0;
  width:100%;
}



.section table {
  border-collapse:collapse;
  width: 100%;
}
.section table thead {
  background-color: #f8f8f8;
  width:100%;
}
.section table tbody {
  width: 100%;
  
}
.section table th{
  font-weight: 100;
  padding:1em 0.5em;
  text-align:left;
}
.section table td{
  font-weight: 300;
  padding:1em 0.5em;
}
.section-1 {
  grid-area: content-1;
  
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
}

/* .section {
  
  margin-top: 1rem;
  width: 100%;
} */

.card-x {
  
  display: flex;
  flex-direction:column;
  
  background-color: var(--card-bg-color);
  border: var(--card-border);
  box-shadow: var(--card-shadow);
  border-radius: var(--card-radius);
  padding: var(--card-padding);
  
  margin: .5rem;
  flex: 1;
  
  
}
.card-x header {
  
  display: flex;
  flex-direction:row;
  
  justify-content: flex-start;
  align-items: center;
  
  color: var(--card-header-text-color);
 
  font-size: var(--card-header-font-size);
  
  
  
}

.card-x header label {
  
  color: red;
  
}

.spacer {
  flex:1;
  background: none;
}

.card-x header button {
  display: flex;
  margin-left: auto;
 
  
  border:none;
  background-color: rgb(129 14 14);
  color: #fff;
  border-radius: var(--default-border-radius);
  padding: .5rem .7rem;
  
  
  
  
}

x.card-x main div:nth-child(1) {
  background-color: var( --card-section-title-bg-color);
  padding: .5rem;
    
  margin: .5rem 0;
  
  
  
}
.traffic-perct {
  display: flex;
  align-items: center;
  width:100%;
}
.traffic-perct span:nth-child(1){
  margin-right: 10px;
}
.pill {
  
  border: thin solid grey;
  min-width: 10rem;
  display: block;
  border-radius:1rem;
  height: 10px;
  width:100%;
}
.fill {
  background-color: rgb(243, 21, 21);
  border-radius:1rem;
  display: block;
  height: 9px;
}

.fill-30 {
  width: 30%;
}
.fill-40 {
  width: 40%;
}
.fill-45 {
  width: 45%;
}
.fill-60 {
  width: 60%;
}
.fill-70 {
  width: 70%;
}

#tableid{
  padding-left: 249px;
}
#tableid th, #tableid td {
          border: 1px solid black;
          padding: 31px;
          text-align: center;
        }

#thcap{
  
  padding-bottom: 40px;
}
.button-link {
          display: inline-block;
          padding: 6px 12px;
          text-align: center;
          text-decoration: none;
          background-color: #d61010;
          color: #fff;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          margin-right: 5px;
        }
        #tableid tbody td {
    text-align: center;
  }
  #tableid thead th {
    text-align: center;
  }



svg.home {
  width: 1.5rem;
  padding-right: 10px;
  
}
svg.mail {
  width: 1.5rem;
  padding-right: 10px;
}
svg.message {
  width: 1.5rem;
  padding-right: 10px;
  
}
svg.bell {
  width: 1.5rem;
  padding-right: 10px;
  
}
svg.home {
  width: 1.5rem;
  
}


#listdiv{
    padding-left: 250px;
}

@media screen and (max-width: 950px) {
  aside.left-sidebar {
    display: flex;
    width: 3.5rem;
    transition: width .10s ease-in-out;
  }
  aside.left-sidebar ul li span label {
    display:none;
  }
  
  aside.left-sidebar ul label {
    display:none;
  }
  main.main-content {
    width:100%;
    margin:0;
  }
}
.headsty{
  padding: 10px;
}
</style>
<style>
    /* Style for the form container */
    #uplodform {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
        padding-left: 510px;
    }

    /* Style for the form header */
    

    /* Style for form labels */
    label {
        display: block;
        margin-bottom: 5px;
    }

    /* Style for form inputs */
    input[type="text"],
    input[type="number"],
    textarea {
        width: 100%;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    /* Style for submit button */
    input[type="submit"] {
        background-color: #df1313;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        float: right;
    }
    #alert{
      margin-top: 20px;
    }

</style>
<style>
  /* Increase the width of the "Category" select input */
  #productCategory {
    width: 100%; /* You can adjust the width as needed */
  }

  /* Apply colorful styles to form elements */
  form {
    max-width: 400px; 
    
    padding: 20px;
    background-color: #102d49a8;
    border: 1px solid #ddd;
    /* border-radius: 5px; */
    height: 386px;
  }

  label {
    display: block;
    margin-bottom: 5px;
    color: #fff; /* Label text color */
  }

  input[type="text"],
  textarea,
  select {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 3px;
    background-color: #fff; /* Input background color */
  }

  select {
    background-color: #f9f9f9; /* Category select background color */
    color: #333; /* Category select text color */
  }

 

  #submitButton {
    background-color: #007bff; /* Submit button background color */
    color: #fff; /* Submit button text color */
    border: none;
    padding: 10px 20px;
    border-radius: 3px;
    cursor: pointer;
  }

  #submitButton:hover {
    background-color: #0056b3; /* Hover state background color */
  }

  /* Error message styling (you can adjust this as needed) */
  .error {
    color: red;
    font-size: 12px;
    display: none;
  }

  .error-visible {
    display: block;
  }
</style>
<style>
    /* CSS for styling the profile card */
    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 300px;
        margin: auto;
        text-align: center;
        font-family: Arial, Helvetica, sans-serif;
        padding: 20px;
    }

    /* CSS for styling the title */
    .title {
        color: #333; /* Change the title text color */
        font-size: 24px; /* Change the title font size */
        margin-top: 10px; /* Add some top margin to separate it from the image */
    }

    /* CSS for styling the profile details section */
    .profile-details {
        margin-top: 20px; /* Add some top margin to separate it from the card */
    }

    .profile-details h2 {
        font-size: 18px; /* Change the heading font size */
        color: #555; /* Change the heading text color */
    }

    .profile-details p {
        font-size: 16px; /* Change the paragraph font size */
        color: #777; /* Change the paragraph text color */
        margin: 5px 0; /* Add some margin between paragraphs */
    }

    .options {
        width: 388px;
    padding: 68px;
     
    /* background-color: #f9f9f9; */
    /* border-radius: 5px; */
    height: 300px;
    margin-top: 20px;
    font-size: 24px;
}

/* Style the list */
.options ul {
    list-style-type: none; /* Remove default list bullets */
    padding: 0; /* Remove default padding */
}

/* Style the list items (options) */
.option {
    margin: 5px 0; /* Add margin for spacing between options */
    cursor: pointer; /* Change cursor on hover to indicate interactivity */
    font-weight: bold; /* Make the text bold */
    padding: 5px; /* Add padding to the list items */
}

/* Define different colors for each option */
.option:nth-child(1) {
    color: #ff5733; /* Change color for the first option */
}

.option:nth-child(2) {
    color: #33ff57; /* Change color for the second option */
}

.option:nth-child(3) {
    color: #5733ff; /* Change color for the third option */
}

/* Add a hover effect */
.option:hover {
    background-color: #ddd; /* Change background color on hover */
}
#editProfileFields {
    display: none;
    padding: 10px;
    border: 1px solid #161010;
    background-color: #1d0505;
    border-radius: 1px;
}

/* Style the labels */
label {
    display: block;
    margin-top: 10px;
}

/* Style the input fields */
input[type="text"],
input[type="email"] {
    width: 100%;
    padding: 5px;
    margin-top: 5px;
    border: 1px solid #978484;
    border-radius: 3px;
}

#close{
    margin-top: 10px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 5px 10px;
    border-radius: 3px;

}
#saveChanges {
    margin-top: 10px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 5px 10px;
    border-radius: 3px;
}

#saveChanges:hover {
    background-color: #0056b3;
}
</style>

   

  <script>
  window.console = window.console || function(t) {};
</script>

  
  
</head>

<body translate="no">
  <div class="main-page">
  <header class="page-header">
    <img src="https://therminic2018.eu/wp-content/uploads/2018/07/dummy-avatar.jpg">
    <span>Admin</span>
    
    <nav class="top-nav">

    </nav>
  </header>

  <main class="main-content">

    <aside class="left-sidebar">
      <nav>

        <ul><label>main</label>
          <li>
            <a href="/admin/dashboard"  style="color: #efefef;">
              <span>
                <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                </svg>
                <label>Dashboard</label>
              </span>
            </a>
          </li>
          <li>
            <a href="/admin/salesReportpage"  style="color: #efefef;">
              <span>
                <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                </svg>
                <label>Sales Report</label>
              </span>
            </a>
          </li>
          <li>
            <a href="/admin/adminproducts"  style="color: #efefef;">
              <span>
                <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                </svg>
                <label>products</label>
              </span>
            </a>
          </li>
          <li>
            <a href="/admin/userOrders"  style="color: #efefef;">
              <span>
                <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                </svg>
                <label>Orders</label>
              </span>
            </a>
          </li>
              <li>
                <a href="/admin/adminusers"  style="color: #efefef;">
                  <span>
                    <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                    </svg>
                    <label>users</label>
                  </span>
                </a>
              </li>
              
              <li>
                <a href="/admin/editcategory" style="color: #efefef;">
                  <span>
                    <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                    </svg>
                    <label>CATEGORY MANAGE</label>
                  </span>
                </a>
              </li>
              <li>
                <a href="/admin/bannerlist " style="color: #efefef;">
                  <span>
                    <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                    </svg>
                    <label>BANNER MANAGE</label>
                  </span>
                </a>
              </li>
              <li>
                <a href="/admin/couponlists " style="color: #efefef;">
                  <span>
                    <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                    </svg>
                    <label>COUPON MANAGE</label>
                  </span>
                </a>
              </li>
              <li>
                <a href="/admin/logout" style="color: #efefef;">
                  <span>
                    <svg class="bell" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                    </svg>
                    <label>Logout</label>
                  </span>
                </a>
              </li>
        </ul>
      </nav>
    </aside>
    <div id="uplodform">
        <div class="card">
            <img src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80" alt="John" style="width:100%">
            <h1><%= adminData.name %></h1>
            <p class="title">CEO & Founder, Example</p>
            <p>Harvard University</p>
        </div>
        <div class="profile-details">
            <h2>Profile Details</h2>
            <p ><strong>Name:</strong><span id="nameValue"><%= adminData.name %></span></p>
            <p><strong>Email:</strong> <span id="emailValue"><%= adminData.email %></span></p>
            <p><strong>Phone Number:</strong><%= adminData.number %></p>
        </div>
    </div>

    <div class="options">
        <ul class="options">
            <li class="option" id="editpassword">Change your password</li>
            <li class="option" id="editprofile">Edit profile</li>
            <% if (isVerified) { %>
                <li class="option" id="addnewadminlink">Add new admin</li>
            <% } %>
        </ul>

        <div id="editProfileFields" style="display: none;">
            <form id="editProfileForm">
               
                <label for="name">Name:</label>
                <input type="text" id="nameInput" value="<%= adminData.name %>">
                
                <label for="email">Email:</label>
                <input type="email" id="emailInput" value="<%= adminData.email %>">
                
                <label for="phoneNumber">Phone Number:</label>
                <input type="text" id="phoneNumberInput" value="<%= adminData.number %>">
              
                <button type="submit" id="saveChanges" >Save Changes</button>
                <button style="background-color: red!important;" id="close" >Close</button>
            </form>

           
        </div>

        <div id="changepass" style="display: none;">
            <form id="editpasswordfrom">
                <label for="password">Password:</label>
                <input type="text" id="passwordValue" value="<%= adminData.password %>">
                <button type="submit" id="saveChange">Save Changes</button>
                <button style="background-color: red!important;" id="close">Close</button>
            </form>
        </div> 

        <div id="addnewadmin" style="display: none;">
            <form id="addnewadminform">
                <label for="name">Name:</label>
                <input type="text" id="nameinput" value="">
                
                <label for="email">Email:</label>
                <input type="email" id="emailinput" value="">
                
                <label for="password">Password:</label>
                <input type="text" id="passwordinput" value="">
              
                <button type="submit" id="saveChanged">Save</button>
                <button style="background-color: red!important;" id="close">Close</button>
            </form>
        </div>
        


        <div>
            <p style="color: red;" id="message"></p>
           
        </div>
       
       
    </div>
    
    
   
    

 
   
    
    
   
   

             
            
            
        </div>
       
       
        
        
     
      
   
  </main>
  
</div>
  <script>
const closeButton = document.getElementById("close");
const editProfileLink = document.getElementById("editprofile");
const editProfileFields = document.getElementById("editProfileFields");
const nameValue = document.getElementById("nameValue");
const emailValue = document.getElementById("emailValue");
var nameInput = document.getElementById("name");
var emailInput = document.getElementById("email");

editProfileLink.addEventListener("click", () => {
    editProfileFields.style.display = "block";

 nameInput.value = nameValue.innerText;
 emailInput.value = emailValue.innerText;
   
});
closeButton.addEventListener("click", () => {
         window.location.reload();
    });   

  </script>

<script>
    const editProfileForm = document.getElementById("editProfileForm");
    const messageElement = document.getElementById("message");

    // Handle form submission
    editProfileForm.addEventListener("submit", function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        // Get the input values and trim them
        const nameInput = document.getElementById("nameInput").value.trim();
        const emailInput = document.getElementById("emailInput").value.trim();
        const phoneNumberInput = document.getElementById("phoneNumberInput").value.trim();

        // Validate the input fields
        if (nameInput === "" || emailInput === "" || phoneNumberInput === "") {
            // Display an error message
            messageElement.innerHTML = "All fields are required.";
            return; // Prevent further processing
        }

        // Collect the form data as an object
        const formData = {
            name: nameInput,
            email: emailInput,
            phoneNumber: phoneNumberInput,
        };

        // Convert the form data to a JSON string
        const jsonData = JSON.stringify(formData);

        // Create an XML request object
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "/admin/editprofile", true); // Replace with your backend endpoint URL
        xhr.setRequestHeader("Content-Type", "application/json"); // Set the content type as JSON

        // Handle response from the server
        xhr.onload = function () {
            if (xhr.status === 200) {
                var form = document.getElementById("editProfileFields");
                document.getElementById("message").innerHTML = "Update Successful.";
            } else {
                // Handle errors here, e.g., show an error message
                console.error("Request failed");
                displayResponseMessage("An error occurred while updating the profile", true);
            }
        };

        // Send the JSON data as the request body
        xhr.send(jsonData);
    });
</script>









<script>
    const editpasswordlink = document.getElementById("editpassword");
    const editpasswordfeild = document.getElementById("changepass");
    const saveChangesButton = document.getElementById("saveChange");

    editpasswordlink.addEventListener("click", () => {
        editpasswordfeild.style.display = "block";
    });

    saveChangesButton.addEventListener("click", () => {
    const passwordValue = document.getElementById("passwordValue").value;

    // Define the URL for changing the password
    const apiUrl = '/admin/changepassword'; // Replace with the actual URL for changing the password

    // Send a POST request with the password value as a string
    fetch(apiUrl, {
        method: 'POST',
        body: JSON.stringify({ Password: passwordValue }), // Use "Password" instead of "password"
        headers: {
            'Content-Type': 'application/json', // Set the content type to JSON
        },
    })
    .then(response => {
        // Handle the response from the backend here (e.g., display a success message)
        if (response.ok) {
            alert('Password changed successfully.');
            // You can hide the form or perform other actions as needed
            editpasswordfeild.style.display = "none";
        } else {
            alert('Failed to change password.');
        }
    })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while changing the password.');
        });
    });
</script>



<script>
    const addNewAdminButton = document.getElementById("addnewadminlink");
    const addNewAdminForm = document.getElementById("addnewadmin");
    const saveButton = document.getElementById("saveChanged");

    addNewAdminButton.addEventListener("click", () => {
        addNewAdminForm.style.display = "block";
    });

    saveButton.addEventListener("click", () => {
        // Get input values
        const name = document.getElementById("nameinput").value;
        const email = document.getElementById("emailinput").value;
        const password = document.getElementById("passwordinput").value;

       

        // Define the URL for your API endpoint
        const apiUrl = '/admin/addnewadmin'; // Replace with your actual API URL

        // Create an object to send as JSON data
        const requestData = {
            name: name,
            email: email,
            password: password
        };

        // Send a POST request with the JSON data
        fetch(apiUrl, {
            method: 'POST',
            body: JSON.stringify(requestData),
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => {
            if (response.ok) {
                alert('Admin added successfully.');
                addNewAdminForm.style.display = "none";
                // You can perform further actions as needed
            } else {
                alert('Failed to add admin.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while adding the admin.');
        });
    });
</script>






  
  
</body>

</html>
